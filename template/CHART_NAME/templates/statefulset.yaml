apiVersion: {{ template "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" . ) | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.hpa.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  podManagementPolicy: {{ .Values.podManagementPolicy | quote }}
  {{- $podLabels := include "common.tplvalues.merge" (dict "values" .Values.podLabels .Values.commonLabels "context" .) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  serviceName: {{ template "common.names.fullname" . }}
  {{- with .Values.updateStrategy }}
  updateStrategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.image) "context" .) | nindent 6 -}}
      serviceAccountName: {{ template "common.names.serviceAccountName" (dict "serviceAccountRoot" .Values.serviceAccount "context" .) }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- with .Values.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with .Values.schedulerName }}
      schedulerName: {{ . | quote }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" . "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      initContainers:
        {{- with .Values.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: "%%CONTAINER_NAME%%"
          image: {{ template "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: BITNAMI_DEBUG
              value: {{ ternary "true" "false" (or .Values.image.debug .Values.diagnosticMode.enabled) | quote }}
            {{- with .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- with .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ template "common.tplvalues.render" (dict "value" . "context" $) }}
            {{- end }}
            {{- with .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ template "common.tplvalues.render" (dict "value" . "context" $) }}
            {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- else if ne .Values.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          ports:
            {{- range $name, $containerPort := .Values.containerPorts }}
            - name: {{ $name }}
              containerPort: {{ $containerPort }}
            {{- end }}
            {{- if .Values.extraContainerPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraContainerPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- with .Values.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- else }}
          livenessProbe: {}
          {{- end }}
          {{- with .Values.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- else }}
          readinessProbe: {}
          {{- end }}
          {{- with .Values.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- else }}
          startupProbe: {}
          {{- end }}
          {{- end }}
          {{- with .Values.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- with .Values.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
        {{- with .Values.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "common.names.fullname" .) .Values.persistence.existingClaim }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        {{- with .Values.commonLabels }}
        labels: {{- include "common.labels.matchLabels" ( dict "customLabels" . "context" $ ) | nindent 10 }}
        {{- end }}
        {{- with include "common.tplvalues.merge" (dict "values" .Values.persistence.annotations .Values.commonAnnotations "context" .) | fromYaml }}
        annotations: {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.accessModes "context" $) | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- with .Values.persistence.selector }}
        selector: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 10 }}
        {{- end }}
        {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
  {{- end }}
